1- When is a child process spawned?
   a child process is spawned when the user enters a new command

2- What is a variable and what are the two types of variables?
   A variable is an entity whose value can change from time to time
   The two types of variables are SHELL variable and Environment variable

3- What is the difference between a SHELL variable and an Environment variable?
   SHELL variable values are not passed on to child processes.
   Environment variable values are passed on to child processes.


4- Explain the following command.
   export CITY=Seattle
  Answer:
       The variable CITY is currently set to "Seattle and the export command makes it an environment variable.
  Bonus:
	Add export to .bash_profile to set value for all future sessions.
	Modify in /etc/skel/ for new user automation.
	Add export to /etc/profile.d/ for system-wide changes.


5-   What is the difference between the commands set and env?
     env ==> View environment variables or change the value of a variable for a specified
command.
    set ==> View shell variables or change the value of shell attributes. Also shows environment variables.


6- What is the use of the time command. Give an example of how you can use the time command
   The time command is used to gather information about how long it took a command to run.
   Example: time find / -name myfile.txt 2>/dev/null


7-  Mention one benefit for using aliases
    You can create a short string to represent longer commands with arguments

8- Explain the following command
   alias dallas='ssh dallas -p 2200'

9- Which file(s) should you add your aliases to so they persist for all future sessions
   .bashrc or .bash_aliases


10- Give an example of how you would use positional parameters in an script.                                            myscript.sh arg1 arg2 arg3
        arg1 is positional parameter $1
        arg2 is $2
        arg3 is $3

11- What is the difference between single (') and double quotes (")
    Single quotes preserve the literal values, double quotes don't.

12- What is a escape character?
    A escape character (either a single quote or \) removes the special 
    meaning from another character.
   Example: echo " I have \$100 dollars"


13- Explain the following Bash Operations 
    $((x + y))                                   ===> arithmetic operation adding the variables x and y
    [ $var1 -ge $var2 ]                          ===> a Comparison operator comparing if var1 is greater or equal to var2
    [ $var1 -ge $var2 ] && [ $var3 -le $var4 ]   ===> a logical operator ... note the &&


14- What is Globbing
    Globbing is the method of shell expansion that is used to replace a specific wild card pattern 
    with values that match the pattern. it is just another name for file/path name expansion.
    The following are three examples of globbing:
      cp *.txt ~/dest
      cp ?.txt ~/dest
      cp [abc].txt ~/dest


15- What is an array?
   An array is a variable with multiple values.
BASH ARRAYS Examples
Compound assignment in Bash arrays uses parentheses with each value separated by
a space:
my_arr=(1 "Hello" 3.1)
Individual assignment adds a value to a specific index in brackets:
my_arr[0]=1
my_arr[1]="Hello"
my_arr[2]=3.1
You can reference an array by wrapping it in curly braces. You can reference a specific
index of the array:
echo ${my_arr[0]}
This will print "1". You can also reference all of the values in an array by using the
asterisk (*) or at symbol (@) in place of the index:
echo ${my_arr[*]}

16- What is command substition?
   is a method of expansion in which the output of command replaces the command itself.
   example:
          echo "The current directory is `pwd`."
          or
          echo "The current directory is $(pwd)."

17- Suppose you have the following script main.sh
    #!/bin/bash

source /tmp/x
if [ $y -eq 2 ]
then
   echo True
else
   echo false
fi

assuming the sourced file /tmp/x contains the variable y=2, what will be the output of the main.sh script.
What is the purpose of the source command here.

Answer:
     The source command executes the /tmp/x script and makes all the variables in it like y=2 available to 
     the main.sh script.


18- Explain the following script
var=5

if [ $var -gt 1 ]
then
    echo "$var is greater than 1!"
 else
     echo "$var is NOT greater than 1"
fi

Explanation:
    The first line var=5 initializes/sets the variable var to 5
    The if statement uses the comparison operator to check if the variable $var is greater than 1
    The first echo will execute because the if statement evaluates to true.




===> Number 19 and 20 are just practice questions and not part of the home work.

19- Create the following text in a script and name it case.sh
    Execute the script and see if you can understand what it is doing.
#-------------------------------------------------------------   
#!/bin/bash
    var=blue
case $var in
red)
echo "Your color is red."
;;
green)
echo "Your color is green."
;;
blue)
echo "Your color is blue."
;;
*)
echo "Your color is neither red, green, nor blue."
;;
esac
#-------------------------------------------------------------   
Next:set the var variable as a positional parameter and change the color to green


20- for loops are ideal for for arrays. create this script and change it as you wish to understand it better.
#!/bin/bash
var=("Carla" "Robert" "Mary")

for i in ${var[*]}
do
    echo "$i is a member of the team."
done

21-
ls z.txt y.txt x.txt |cpio -ov > /media/usb/backup.cpio
The above command will backup multiple files in the current directory using the -o option to 
write the data "out to a file".


22-cpio -iv < /media/usb/backup.cpio 
To restore files from a cpio archive, run the cpio with the -i option to read the files "in"


